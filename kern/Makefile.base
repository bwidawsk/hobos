TARGET?=amd64
CC=gcc
LD=ld
MAKEDEPEND = makedepend
ifneq ($(V), 0)
MAKEFLAGS=--no-print-directory
endif
export ROOTDIR=$(PWD)
export CC
export LD
export MAKEDEPEND

# I'd like to have no builtins so that GCC isn't required, but can't avoid for now
#CFLAGS+=-fno-builtin
CFLAGS+=-mcmodel=kernel -ansi -std=c99 -ffreestanding -nostdinc -nostartfiles -nodefaultlibs -nostdlib -Wall
CFLAGS+=-Wno-unused-function
DEFINES=-DKERNEL
DEFINES+=$(shell cat build_options)
CFLAGS+=$(DEFINES)
LD_SCRIPT=linker_script.ld -S

INCLUDES=-I$(PWD)/include -I$(PWD)/arch/$(TARGET) -I$(PWD) -I$(ROOTDIR)/../common/include -include $(PWD)/include/common.h
ESOTERIC_INCLUDES=-imacros ../common/include/cdefs.h
CFLAGS+=$(INCLUDES) $(ESOTERIC_INCLUDES)

LDFLAGS?=
export CFLAGS
export LDFLAGS
export DEFINES
export INCLUDES

DIRS = include arch/$(TARGET) core dev lib mm fs
OBJS = arch/$(TARGET)/arch.a core/core.a dev/devices.a lib/lib.a mm/mm.a fs/fs.a
OUTPUT = kernel

all : $(OUTPUT)

$(OUTPUT) : include_clean
	$(shell $(CURDIR)/vers.sh)
	-@rm -f $(CURDIR)/include/arch
	@ln -sf $(PWD)/arch/${TARGET}/include/ $(PWD)/include/arch
	@for dir in $(DIRS); do (${MAKE} -C $$dir $1 || exit 1) || exit 1; done
	@echo "Linking ${TARGET} kernel..."
	@$(LD) $(LDFLAGS) -N -e start -T arch/${TARGET}/$(LD_SCRIPT) $(OBJS) -o kernel

# autocleans if critical files change
include_clean : include/common.h build_options
	-@rm -f $(OUTPUT)
	for dir in $(DIRS); do (${MAKE} -C $$dir clean $1 || exit 1) || exit 1; done
	touch $@

tags :
	ctags -R .
	ctags -Ra $(CURDIR)/../common

cscope :
	cscope -q -k -b -u -R

picocom :
	sudo picocom -b 115200 -i -r /dev/ttyp9 -c

help :
	@echo "Available targets: "
	@echo " all (default), alias: kernel"
	@echo " tags"
	@echo " cscope"
	@echo " picocom"
	@echo " help"
	@echo " clean"
	@echo " distclean"
	@echo "Variables which you may want to change: "
	@echo " CC default: $(CC)"
	@echo " LD default: $(LD)"
	@echo " CFLAGS default: $(CFLAGS)"
	@echo " LDFLAGS default: $(LDFLAGS)"


clean :
	-@rm -f core/vers.c include/arch $(OUTPUT)
	for dir in $(DIRS); do (${MAKE} -C $$dir clean $1 || exit 1) || exit 1; done

distclean : clean
	-@rm -f cscope* tags

.PHONY: $(OUTPUT) tags cscope picocom clean distclean
